plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

/*java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}*/

repositories {
	mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    // Spring Boot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // JUnit 5 (Platform Launcher)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    // JDBC
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // Spring Web  ←追加！
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Data JDBC ←追加！
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    // Validation ←追加！
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	// PostgreSQL JDBC Driver ←追加！
	implementation 'org.postgresql:postgresql:42.7.2'
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
            // 下記のように filter を使ってください
            include '**/*.properties', '**/*.yml', '**/*.xml'
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
